{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/16268/repos/Redux-practice-streams/client/src/components/Streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  streams\n}) => {\n  return {\n    streams: Object.values(streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/mnt/c/Users/16268/repos/Redux-practice-streams/client/src/components/Streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","componentDidMount","props","renderList","streams","map","stream","title","description","id","render","mapStateToProps","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,YAAX;AACD;;AAEDK,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI;AACtC,0BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBACGA,MAAM,CAACC,KADV,eAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBACGD,MAAM,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA2BF,MAAM,CAACG,EAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZM,CAAP;AAaD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACG,KAAKP,UAAL;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA9BsC;;AAiCzC,MAAMQ,eAAe,GAAG,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAiB;AACvC,SAAO;AAAEA,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcT,OAAd;AAAX,GAAP;AACD,CAFD;;AAIA,eAAeP,OAAO,CACpBc,eADoB,EAEpB;AAAEb,EAAAA;AAAF,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchStreams } from '../../actions/index'\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams()\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">\n              {stream.description}\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">\n          {this.renderList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ streams }) => {\n  return { streams: Object.values(streams)}\n}\n\nexport default connect(\n  mapStateToProps,\n  { fetchStreams }\n)(StreamList)\n"]},"metadata":{},"sourceType":"module"}